# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  db:
    image: mysql:8.0
    container_name: taskii-db
    ports:
      - 33062:3306
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent" ]
      interval: 3s
      retries: 5
      start_period: 30s
    volumes:
      - database:/var/lib/mysql
    networks:
      - spring-net

  keycloak:
    container_name: taskii-keycloak
    image: quay.io/keycloak/keycloak:26.3.2
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./keycloak/realm-export/taskii-realm.json:/opt/keycloak/data/import/taskii-realm.json:ro
      - ./keycloak/themes:/opt/keycloak/themes
    ports:
      - 8080:8080
    env_file:
      - .env
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
    networks:
      - spring-net
    command:
      start-dev --import-realm --spi-theme-static-max-age=-1 --spi-theme-cache-themes=false --spi-theme-cache-templates=false


  mail-dev:
    container_name: mail-dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025
    networks:
      - spring-net

volumes:
  database:
  keycloak_data:

networks:
  spring-net:
    driver: bridge

